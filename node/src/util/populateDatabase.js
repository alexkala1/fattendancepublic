const User = require('../models/User')
const AuthService = require('../services/AuthService')
const StudentService = require('../services/StudentService')
const TeacherService = require('../services/TeacherService')
const CourseService = require('../services/CourseService')

module.exports = {
  clearCourses: async () => {
    await CourseService.clearCourses()
  },
  generateUsers: async () => {

    const emailEnding = '@tei.edu'
    const password = '12345678'

    const names = ["Quinn",
      "Wandis",
      "Stephanus",
      "Arleta",
      "Petr",
      "Allyson",
      "Alma",
      "Giavani",
      "Merrick",
      "Silva",
      "Hale",
      "Suki",
      "Link",
      "Davidde",
      "Cass",
      "Jaclin",
      "Mollee",
      "Billye",
      "Maria",
      "Teodorico",
      "Lena",
      "Sibilla",
      "Willabella",
      "Damien",
      "Nikolos",
      "Keeley",
      "Turner",
      "Stepha",
      "Norry",
      "Larine",
      "Vikki",
      "Sybyl",
      "Ophelie",
      "Doro",
      "Sydney",
      "Owen",
      "Bobbie",
      "Feliks",
      "Papagena",
      "Tomasina",
      "Gordy",
      "Garner",
      "Maison",
      "Elvina",
      "Rayshell",
      "Auberta",
      "Eldridge",
      "Dallon",
      "Valencia",
      "Eunice",
      "Ottilie",
      "Fancy",
      "Perry",
      "Sherwin",
      "Camile",
      "Raina",
      "Ardella",
      "Archibald",
      "Grant",
      "Aksel",
      "Morley",
      "Sheila-kathryn",
      "Paddy",
      "Iormina",
      "Denyse",
      "Charleen",
      "Donalt",
      "Isa",
      "Davide",
      "Tiphani",
      "Zorina",
      "Slade",
      "Dulcy",
      "Gizela",
      "Biddie",
      "Liesa",
      "Garfield",
      "Ruttger",
      "Clerissa",
      "Thomasa",
      "Lory",
      "Ario",
      "Willard",
      "Lyndell",
      "Inger",
      "Alfy",
      "Laura",
      "Kate",
      "Ulla",
      "Anabal",
      "Edithe",
      "Deanna",
      "Elijah",
      "Lucian",
      "Janette",
      "Kahaleel",
      "Hadria",
      "Rosina",
      "Gussi",
      "Mair"
    ]
    const surnames = [
      "Flaubert",
      "Dominici",
      "Shipcott",
      "Pilch",
      "Rammell",
      "Nesey",
      "Blowick",
      "Kinnard",
      "Kimbley",
      "Pina",
      "Cordeiro",
      "Taggert",
      "Gwioneth",
      "Cars",
      "Livesey",
      "Cocks",
      "Laingmaid",
      "Antonioni",
      "Gerrad",
      "Lappine",
      "Chatt",
      "Graber",
      "Crannell",
      "Corzon",
      "Lesly",
      "Iles",
      "Worssam",
      "Giller",
      "Sailor",
      "Figgins",
      "Hassett",
      "Leavey",
      "Kenaway",
      "MacAlester",
      "Rushsorth",
      "Brisse",
      "Liccardo",
      "Takkos",
      "Cartwight",
      "Dybell",
      "Arnopp",
      "Delgardo",
      "Sloss",
      "Keppin",
      "Perrett",
      "Stollberg",
      "Cockerham",
      "Nield",
      "Parkhouse",
      "Cufley",
      "Pearle",
      "Gurwood",
      "Trewinnard",
      "Wallenger",
      "Allberry",
      "McConaghy",
      "Skeel",
      "Jimpson",
      "Walshe",
      "Ridout",
      "Tenpenny",
      "Drei",
      "Meeks",
      "Bartolomieu",
      "Brookwood",
      "Pattie",
      "Northam",
      "Freen",
      "Fricke",
      "Puckey",
      "Kneebone",
      "Skelbeck",
      "Bolgar",
      "Burnsell",
      "Battye",
      "Izsak",
      "Demougeot",
      "Sambedge",
      "Diperaus",
      "Pennazzi",
      "Brinicombe",
      "Bedle",
      "Dooly",
      "Penny",
      "Kitchinham",
      "Pinhorn",
      "Gofton",
      "De", "Witt",
      "Ginsie",
      "Dumblton",
      "Morling",
      "Lorans",
      "Curme",
      "Spedding",
      "Alasdair",
      "Parcall",
      "Hugh",
      "Ledingham",
      "Ladd",
      "Edleston"
    ]

    const users = []

    for (let i = 0; i < 100; i++) {
      await AuthService.register({
        email: `${names[i]}.${surnames[i]}${emailEnding}`,
        name: names[i],
        surname: surnames[i],
        password: password,
        userType: ['σπουδαστής', 'γραμματέας', 'καθηγητής'][parseInt(Math.random() * 3)]
      })
    }
  },

  generateStudents: async () => {
    let studentUsers = await AuthService.getAllStudentUsers()
    let arithmoiMitroou = [1000,
      1001,
      1002,
      1003,
      1004,
      1005,
      1006,
      1007,
      1008,
      1009,
      1010,
      1011,
      1012,
      1013,
      1014,
      1015,
      1016,
      1017,
      1018,
      1019,
      1020,
      1021,
      1022,
      1023,
      1024,
      1025,
      1026,
      1027,
      1028,
      1029,
      1030,
      1031,
      1032,
      1033,
      1034,
      1035,
      1036,
      1037,
      1038,
      1039,
      1040,
      1041,
      1042,
      1043,
      1044,
      1045,
      1046,
      1047,
      1048,
      1049,
      1050,
      1051,
      1052,
      1053,
      1054,
      1055,
      1056,
      1057,
      1058,
      1059,
      1060,
      1061,
      1062,
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1071,
      1072,
      1073,
      1074,
      1075,
      1076,
      1077,
      1078,
      1079,
      1080,
      1081,
      1082,
      1083,
      1084,
      1085,
      1086,
      1087,
      1088,
      1089,
      1090,
      1091,
      1092,
      1093,
      1094,
      1095,
      1096,
      1097,
      1098,
      1099
    ]
    for (i = 0; i < studentUsers.length; i++)
      await StudentService.createStudent({
        name: studentUsers[i].name,
        surname: studentUsers[i].surname,
        email: studentUsers[i].email,
        arithmosMitroou: arithmoiMitroou[i],
        fingerprintID: 0,
        semester: 1
      })
  },

  generateTeachers: async () => {
    let teacherUsers = await AuthService.getAllTeacherUsers()
    for (i = 0; i < teacherUsers.length; i++)
      await TeacherService.createTeacher({
        name: teacherUsers[i].name,
        surname: teacherUsers[i].surname,
        email: teacherUsers[i].email,
        teachingCourses: []
      })
  },
  addSemesterToStudents: async () => {
    return await StudentService.addSemesterToStudents()
  }
}